"use client"

import { useState } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../components/ui/card"
import { Button } from "../components/ui/button"
import { Input } from "../components/ui/input"
import { Label } from "../components/ui/label"
import { Badge } from "../components/ui/badge"
import { Switch } from "../components/ui/switch"
import { Share, Link, Mail, Twitter, Copy, Eye, Lock, Globe } from "lucide-react"

// Re-defining AnalysisData here for clarity and to ensure ShareableReport is self-contained
interface AnalysisData {
  issues: any[];
  summary: {
    High: number;
    Medium: number;
    Low: number;
    total: number;
  };
}

interface AuditReportDisplayData {
  contractName: string;
  analysisDate: string;
  securityScore: number;
  totalIssues: number;
  highRisk: number;
  mediumRisk: number;
  lowRisk: number;
  gasEfficiency: number;
  codeQuality: number;
  analysisTime: string;
}

interface ShareableReportProps {
  data: AuditReportDisplayData | null; // Expecting AuditReportDisplayData now
}

export function ShareableReport({ data }: ShareableReportProps) {
  const [isPublic, setIsPublic] = useState(false)
  const [copied, setCopied] = useState(false)

  // Derive display data, similar to other report components
  const totalIssues = data?.totalIssues || 0
  const highRisk = data?.highRisk || 0
  const mediumRisk = data?.mediumRisk || 0
  const lowRisk = data?.lowRisk || 0

  const calculateSecurityScore = (high: number, medium: number, low: number): number => {
    const maxScore = 100
    const highImpact = 10
    const mediumImpact = 5
    const lowImpact = 2

    const deductions = (high * highImpact) + (medium * mediumImpact) + (low * lowImpact)
    let score = maxScore - deductions
    return Math.max(0, score) // Score can't go below 0
  }

  const securityScore = calculateSecurityScore(highRisk, mediumRisk, lowRisk)

  const contractName = data?.contractName || "N/A" // Use contractName directly from prop

  // The shareUrl would ideally be dynamic and generated by the backend based on report ID
  // For now, it remains a placeholder.
  const [shareUrl] = useState("https://secureai.com/reports/" + (contractName !== "N/A" ? contractName.toLowerCase() : "default") + "-" + (new Date().getTime().toString().slice(-6)))

  const handleCopyUrl = () => {
    navigator.clipboard.writeText(shareUrl)
    setCopied(true)
    setTimeout(() => setCopied(false), 2000)
  }

  const getGrade = (score: number): string => {
    if (score >= 90) return "A+"
    if (score >= 80) return "A"
    if (score >= 70) return "B+"
    if (score >= 60) return "B"
    if (score >= 50) return "C"
    return "D"
  }

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Share className="w-5 h-5" />
            Share Report
          </CardTitle>
          <CardDescription>Generate shareable links and distribute your audit report</CardDescription>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="flex items-center justify-between p-4 border border-border rounded-lg">
            <div className="flex items-center gap-3">
              {isPublic ? (
                <Globe className="w-5 h-5 text-green-500" />
              ) : (
                <Lock className="w-5 h-5 text-muted-foreground" />
              )}
              <div>
                <p className="font-medium">{isPublic ? "Public Report" : "Private Report"}</p>
                <p className="text-sm text-muted-foreground">
                  {isPublic ? "Anyone with the link can view this report" : "Only you can access this report"}
                </p>
              </div>
            </div>
            <Switch checked={isPublic} onCheckedChange={setIsPublic} />
          </div>

          {isPublic && (
            <div className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="share-url">Shareable Link</Label>
                <div className="flex gap-2">
                  <Input id="share-url" value={shareUrl} readOnly className="font-mono text-sm" />
                  <Button variant="outline" onClick={handleCopyUrl}>
                    {copied ? "Copied!" : <Copy className="w-4 h-4" />}
                  </Button>
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <Button variant="outline" className="flex items-center gap-2 bg-transparent">
                  <Mail className="w-4 h-4" />
                  Email
                </Button>
                <Button variant="outline" className="flex items-center gap-2 bg-transparent">
                  <Twitter className="w-4 h-4" />
                  Twitter
                </Button>
                <Button variant="outline" className="flex items-center gap-2 bg-transparent">
                  <Link className="w-4 h-4" />
                  LinkedIn
                </Button>
              </div>
            </div>
          )}
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Eye className="w-5 h-5" />
            Report Preview
          </CardTitle>
          <CardDescription>How your shared report will appear to viewers</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="border border-border rounded-lg p-6 bg-muted/20">
            <div className="flex items-center justify-between mb-4">
              <div className="flex items-center gap-2">
                <div className="w-8 h-8 bg-primary rounded-lg flex items-center justify-center">
                  <span className="text-white font-bold text-sm">SA</span>
                </div>
                <span className="font-medium">SecureAI Audit Report</span>
              </div>
              <Badge variant="secondary">{isPublic ? "Public" : "Private"}</Badge>
            </div>

            <div className="space-y-4">
              <div>
                <h3 className="text-lg font-semibold">{contractName} Security Audit</h3>
                <p className="text-sm text-muted-foreground">Comprehensive AI-powered security analysis</p>
              </div>

              <div className="grid grid-cols-3 gap-4">
                <div className="text-center p-3 bg-background rounded-lg">
                  <div className="text-xl font-bold text-primary">{securityScore}</div>
                  <div className="text-xs text-muted-foreground">Security Score</div>
                </div>
                <div className="text-center p-3 bg-background rounded-lg">
                  <div className="text-xl font-bold text-yellow-600">{totalIssues}</div>
                  <div className="text-xs text-muted-foreground">Issues Found</div>
                </div>
                <div className="text-center p-3 bg-background rounded-lg">
                  <div className="text-xl font-bold text-green-600">{getGrade(securityScore)}</div>
                  <div className="text-xs text-muted-foreground">Grade</div>
                </div>
              </div>

              <div className="text-center pt-4 border-t border-border">
                <Button size="sm">View Full Report</Button>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle>Sharing Options</CardTitle>
          <CardDescription>Customize what information is included in shared reports</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="space-y-3">
            <div className="flex items-center justify-between">
              <span className="text-sm">Include security score</span>
              <Switch defaultChecked />
            </div>
            <div className="flex items-center justify-between">
              <span className="text-sm">Show vulnerability details</span>
              <Switch defaultChecked />
            </div>
            <div className="flex items-center justify-between">
              <span className="text-sm">Include fix recommendations</span>
              <Switch />
            </div>
            <div className="flex items-center justify-between">
              <span className="text-sm">Show gas analysis</span>
              <Switch defaultChecked />
            </div>
            <div className="flex items-center justify-between">
              <span className="text-sm">Include code snippets</span>
              <Switch />
            </div>
            <div className="flex items-center justify-between">
              <span className="text-sm">Show audit timestamp</span>
              <Switch defaultChecked />
            </div>
          </div>

          <div className="pt-4 border-t border-border">
            <div className="flex items-center gap-2 text-sm text-muted-foreground">
              <Lock className="w-4 h-4" />
              Sensitive information like contract source code is never shared publicly
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}
